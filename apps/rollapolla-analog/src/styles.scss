@use '@angular/material' as mat;
@import 'normalize.css/normalize.css';

@include mat.core();

$theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: mat.$spring-green-palette,
    ),
  )
);

$dark-theme: mat.define-theme(
  (
    color: (
      theme-type: dark,
      primary: mat.$spring-green-palette,
    ),
  )
);

html {
  @include mat.core-theme($dark-theme);
  @include mat.button-theme($dark-theme);
  @include mat.form-field-theme($dark-theme);
  @include mat.input-theme($dark-theme);
  @include mat.card-theme($dark-theme);
  @include mat.list-theme($dark-theme);

  // Apply the light theme only when the user prefers light themes.
  @media (prefers-color-scheme: light) {
    // Use the `-color` mixins to only apply color styles without reapplying the same
    // typography and density styles.
    @include mat.core-color($theme);
    @include mat.button-color($theme);
    @include mat.form-field-color($theme);
    @include mat.input-color($theme);
    @include mat.card-color($theme);
    @include mat.list-color($theme);
  }

  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

body,
html {
  * {
    box-sizing: border-box;
    &:before,
    &:after {
      box-sizing: border-box;
    }
  }
}

body {
  margin: 0;
  background: linear-gradient(
      to right,
      #008040,
      #006633 24%,
      #004d26 27%,
      #00331a 30%,
      #001a0d 33.3333%,
      #00331a 37%,
      #004d26 40%,
      #006633 43%,
      #008040 66.66%,
      #006633 91%,
      #004d26 94%,
      #00331a 97%,
      #001a0d 100%
    )
    repeat-y;
  background-size: 300% 100%;
  animation: gradient-move 10s linear infinite;

  @keyframes gradient-move {
    0% {
      background-position: 0% 50%;
    }
    100% {
      background-position: 100% 50%;
    }
  }
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100vh;
  width: 100%;
  padding: 1rem;

  rap-root {
    width: 100%;
    max-width: 800px;
    margin: auto;
    height: 100%;
  }
}
