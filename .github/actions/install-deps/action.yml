name: 'Install Dependencies'
description: 'Installs all dependencies for this repo to run'
inputs:
  run-scripts: # id of input
    description: 'run npm install with --no-scripts flag'
    required: false
    default: 'false'
  browser:
    description: 'install browser and playwright dependencies'
    required: false
    default: 'false'
  apt-packages:
    description: 'install packages needed to run tests'
    required: false
    default: 'false'

runs:
  using: composite

  steps:
    - name: Install ubuntu dependencies
      if: inputs.apt-packages == 'true'
      shell: bash
      run: ./.github/actions/install-deps/install-ubuntu-packages.sh
    - uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: npm
    - name: Cache node_modules
      id: cache
      uses: actions/cache@v4
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}
    - name: Cache Cypress Binary
      id: cache-browser-binary
      if: inputs.browser == 'true'
      uses: actions/cache@v4
      with:
        path: ${{ env.CYPRESS_CACHE_FOLDER || '~/.cache/Cypress' }}
        key: cypress-binary-${{ hashFiles('package-lock.json') }}
    - name: Cache Playwright binaries
      id: cache-playwright-binary
      if: inputs.browser == 'true'
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: playwright-binary-${{ hashFiles('package-lock.json') }}

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true' && inputs.browser == 'false'
      shell: bash
      run: |
        npm install --ignore-scripts=${{ inputs.run-scripts == 'false' }}
      env:
        CYPRESS_INSTALL_BINARY: 0

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true' && inputs.browser != 'false'
      shell: bash
      run: |
        npm install --ignore-scripts=${{ inputs.run-scripts == 'false' }}
        npx playwright install --with-deps
