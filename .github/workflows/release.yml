name: Create release
on:
  push:
    # Pattern matched against refs/tags
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  release:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    env:
      CYPRESS_INSTALL_BINARY: 0
    steps:
      - name: Install ubuntu dependencies
        shell: bash
        run: |
          echo "Install packages to compile node_modules gl with node-gyp"
          sudo apt-get update -y
          sudo apt-get install xserver-xorg-dev libxi-dev libxext-dev -y
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # caching node_modules
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.0.0
        with:
          ref: ${{ github.ref }}
          check-name: verify-main
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          allowed-conclusions: success

      - name: create sentry release version
        id: sentry-version
        run: |
          SENTRY_VERSION="angular-examples@${{ github.ref_name }}"
          echo "Sentry version: ${SENTRY_VERSION}"
          echo "::set-output name=sentry-version::${SENTRY_VERSION}"

      - name: Integrate sentry release version into index.html
        run: echo "TODO integrate ${{ steps.sentry-version.outputs.sentry-version }} into index.html"

      - name: Build
        run: npx nx build angular-examples

      - name: ZIP-files for release
        uses: vimtor/action-zip@v1
        with:
          files: |
            dist/
          dest: release.zip

      - uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.RELEASE_GH_TOKEN }}'
          prerelease: false
          files: release.zip

      - name: Create Sentry Release
        uses: getsentry/action-release@v1
        with:
          version: ${{ steps.sentry-version.outputs.sentry-version }}
          sourcemaps: dist/apps/angular-examples
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: 'wolsok'
          SENTRY_PROJECT: 'angular-examples'
