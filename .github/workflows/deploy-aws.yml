name: Deploy release to AWS
on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
        default: v3.0.1
        description: Release version

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  RELEASE_VERSION: ${{ github.event.inputs.version || github.ref_name }}

jobs:
  deploy:
    timeout-minutes: 30
    environment: aws
    runs-on: ubuntu-latest
    steps:
      - run: echo "Release prozess started for version ${{ env.RELEASE_VERSION }}"

      - name: Download Release Asset
        id: download_release_asset
        uses: i3h/download-release-asset@v1
        with:
          owner: WolfSoko
          repo: wol-sok-mono
          tag: ${{ env.RELEASE_VERSION }}
          file: release.zip
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Unzip release
        run: unzip release.zip -d './dist'

      - name: Upload angular-examples app to S3 bucket
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --delete
        env:
          AWS_S3_BUCKET: 'superheroiccoding.de'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-central-1'
          SOURCE_DIR: 'dist/production/'
          DEST_DIR: 'angularExamples/'

      # Clears the CloudFront cache so new requests will receive the latest version of your app
      - name: Invalidate Cloudfront CDN cache
        uses: chetan/invalidate-cloudfront-action@v2.4
        env:
          DISTRIBUTION: 'E22J2LG5B4PGRR'
          PATHS: '/index.html /ngsw.json /manifest.json /**/remoteEntry.mjs'
          AWS_REGION: 'eu-central-1'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: nashmaniac/create-issue-action@v1.2
        if: failure()
        name: Create Issue
        with:
          title: 'bug(deploy): Deploy release to AWS pipeline failed'
          token: ${{ secrets.GITHUB_TOKEN }}
          assignees: ${{ github.actor }}
          labels: bug
          body: GitHub [Deploy release to AWS workflow](https://github.com/WolfSoko/wol-sok-mono/actions/workflows/deploy-aws.yml) failed

  deploy-cdk-apps:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    environment: aws-cdk
    steps:
      - uses: actions/checkout@v4
        name: 'Checkout main branch'
        with:
          ref: main
          # only latest version of main branch
          fetch-depth: 1
      - name: Install Deps
        uses: ./.github/actions/install-deps
      - name: Deploy CDK Apps
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx run-many --target=deploy -- --all --require-approval=never
    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
