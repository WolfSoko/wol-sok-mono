name: ciÂ²

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') || startsWith(github.ref_name, 'renovate-github-sh') }}

env:
  NODE_OPTIONS: '--max_old_space_size=4096'
  NX_BRANCH: ${{ github.event.number || github.ref_name }}
  NX_CLOUD_DISTRIBUTED_EXECUTION: 'true'
  CYPRESS_CACHE_FOLDER: 'cache/cypress'
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_DASHBOARD_KEY }}

jobs:
  agents:
    name: Nx Cloud Agents
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        agent: [ 1, 2, 3, 4, 5 ]
    steps:
      - name: install dependencies for node-gyp
        run: |
          echo "Install packages to compile node_modules gl with node-gyp"
          sudo apt-get update -y
          sudo apt-get install xserver-xorg-dev libxi-dev libxext-dev -y
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Cache Cypress Binary
        id: cache-cypress-binary
        uses: actions/cache@v3
        with:
          path: ${{ env.CYPRESS_CACHE_FOLDER }}
          key: cypress-binary-${{ hashFiles('package-lock.json') }}

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent

  verify:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      CYPRESS_INSTALL_BINARY: 0
    steps:
      - name: install dependencies for node-gyp
        run: |
          echo "Install packages to compile node_modules gl with node-gyp"
          sudo apt-fast update -y
          sudo apt-fast install xserver-xorg-dev libxi-dev libxext-dev -y

      - uses: actions/checkout@v3
        name: 'Checkout branch'
        if: ${{ github.event_name != 'pull_request' }}
        with:
          fetch-depth: 0

      - uses: actions/checkout@v3
        name: 'Checkout [pr]'
        if: ${{ github.event_name == 'pull_request' }}
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: modules-ignore-scripts-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"

      - run: npx nx workspace-lint
      - run: npx nx-cloud start-ci-run
      - name: Run verification
        uses: JamesHenry/parallel-bash-commands@v1.0
        with:
          cmd1: npx nx affected --target=build --parallel=1
          cmd2: npx nx affected --target=test --parallel=1
          cmd3: npx nx affected --target=lint --parallel=4
          cmd4: npx -c \"nx affected --target=e2e --parallel=1 --configuration=ci -- --record=true\"
      - run: npx nx-cloud stop-all-agents
        if: ${{ always() }}
      - name: Tag main branch if all jobs succeed
        if: ${{ github.ref_name == 'main' }}
        uses: nrwl/nx-tag-successful-ci-run@v1
      - name: trigger release
        if: ${{ !contains(github.event.head_commit.message, 'chore(release):') && github.ref_name == 'main' }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          npm run release
      - name: Push changes
        if: ${{ !contains(github.event.head_commit.message, 'chore(release):') && github.ref_name == 'main' }}
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
