name: CI
on:
  push:
    branches:
      - main
  pull_request:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NODE_VERSION: '16'
  NODE_OPTIONS: '--max_old_space_size=4096'

jobs:

  agents:
    runs-on: ubuntu-latest
    name: Agents
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
    steps:
      - uses: actions/checkout@latest
      - uses: actions/setup-node@latest
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent

  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - uses: actions/checkout@latest
        name: Checkout [main]
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@latest
      - uses: actions/setup-node@latest
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install
      - name: Run verification
        uses: JamesHenry/parallel-bash-commands@v0.1
        with:
          cmd1: npx nx affected --target=build --parallel=4
          cmd2: npx nx affected --target=test --parallel=4
          cmd3: npx nx affected --target=lint --parallel=4
          cmd4: npx nx affected --target=e2e --parallel=1
      - run: npx nx-cloud stop-all-agents
  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@latest
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@latest
      - uses: actions/setup-node@latest
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install
      - name: Run verification
        uses: JamesHenry/parallel-bash-commands@v0.1
        with:
          cmd1: npx nx affected --target=build --parallel=4
          cmd2: npx nx affected --target=test --parallel=4
          cmd3: npx nx affected --target=lint --parallel=4
          cmd4: npx nx affected --target=e2e --parallel=1
      - run: npx nx-cloud stop-all-agents

