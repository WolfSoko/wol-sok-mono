name: CI/CD
on:
  push:
    branches:
      - main
    tags-ignore:
      - '*'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') || startsWith(github.ref_name, 'renovate-github-sh') }}

# Needed for nx-set-shas when run on the main branch
permissions:
  actions: read
  contents: write
  pull-requests: write

env:
  HUSKY: 0
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_DASHBOARD_KEY }}
  NODE_OPTIONS: '--max_old_space_size=4096'

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "e2e-ci" targets have been requested
      - run: npx nx-cloud start-ci-run --distribute-on=".nx/workflows/dynamic-changesets.yml" --stop-agents-after="e2e-ci"

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'npm'
      - name: Install Deps
        uses: ./.github/actions/install-deps
        with:
          cypress: false
      - uses: nrwl/nx-set-shas@v4
      # This line is needed for nx affected to work when CI is running on a PR
      - run: git branch --track main origin/main
        if: github.event_name == 'pull_request'

      - run: npx nx-cloud record -- nx format:check
      - name: Run verification
        uses: JamesHenry/parallel-bash-commands@v1.0
        with:
          cmd1: npx nx affected -t=\"build,lint,component-test\"
          cmd2: npx nx affected -t=\"test,test-integration\" -c=ci
          # running cypress e2e test
          cmd6: npx nx affected -t=e2e --exclude=\"*,!tag:storybook-e2e\" -c=ci
          # running playwrights e2e test
          cmd7: npx nx affected -t=e2e-ci
      - run: npx nx-cloud stop-all-agents
        if: ${{ always() }}
      - name: Report Codecov
        if: github.ref_name == 'main' && hashFiles('coverage/**/*') != ''
        uses: codecov/codecov-action@v4-beta
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          fail_ci_if_error: true
          verbose: true
      - name: determine if deployables are affected and a release should be triggered
        if: github.ref_name == 'main'
        id: shouldTriggerRelease
        run: |
          projects=$(npx nx show projects --affected -t deploy);
          echo $projects
          triggerRelease=$([[ -z $projects ]] && echo "false" || echo "true")
          echo "triggerRelease=$triggerRelease" >> $GITHUB_OUTPUT
          echo "$([[ -z $projects ]] && echo 'No deployable projects affected, no need for a release' || echo 'Deployable projects affected. Trigger release!!!')" >> $GITHUB_STEP_SUMMARY
      - name: trigger release
        if: steps.shouldTriggerRelease.outputs.triggerRelease == 'true'
        run: |
          git config --global user.email "trigger.release@github.com"
          git config --global user.name "Arelease ShouldBeMate"
          npx standard-version
          git push origin $GITHUB_REF --tags --no-verify
        env:
          GITHUB_TOKEN: secrets.PAT_TOKEN
